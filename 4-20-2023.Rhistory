stat_summary(fun.y = mean, geom = "bar")+
ylim(0,.5)+labs(x="Houses", y="Average housing price",
title="Figure4")+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)+0.25)+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)-0.25)
Figure5
Figure5 =ggplot(Sheet3, aes(x = House_cncl, y = Correlation_cncl, fill= House_cncl))+
stat_summary(fun.y = mean, geom = "bar")+
ylim(0,.5)+labs(x="Houses", y="Average housing price",
title="Figure4")+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)+0.025)+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)-0.025)
Figure5
t.test(Income/Price, MercutarIncome/MercutarPrice, mu = 0.025)
t.test(Income/Price, Sea_and_TreeIncome/Sea_and_TreePrice, mu = 0.025)
House_cn = c(rep("General",250),rep("Mercutar", 50),rep("Sea and Tree", 50),rep("Kripp Altstadt", 50),
rep("Kripp Neustadt", 50),rep("Nordlethal", 50))
Correlation_cn = c(Income/Price, MercutarIncome/MercutarPrice, Sea_and_TreeIncome/Sea_and_TreePrice,
Kripp_AltstadtIncome/Kripp_AltstadtPrice, Kripp_NeustadtIncome/Kripp_NeustadtPrice,
NordlethalIncome/NordlethalPrice)
Sheet4 = tibble(House_cn, Correlation_cn)
View(Sheet4)
pGeneral = c(Income/Price)
pMercutar = c(MercutarIncome/MercutarPrice)
Sheet5 = tibble(pGeneral, pMercutar)
View(Sheet5)
ggviolin(Sheet4, "House_cn", "Correlation_cn")
install.packages("ggpubr")
library(ggpubr)
ggviolin(Sheet4, "House_cn", "Correlation_cn")
ggviolin(Sheet4, "House_cn", "Correlation_cn", fill="House_cn", add = "jitter")
ggviolin(Sheet4, "House_cn", "Correlation_cn", fill="House_cn", add = "jitter")+
stat_compare_means()
ggviolin(Sheet4, "House_cn", "Correlation_cn", fill="House_cn", add = "jitter")+
stat_compare_means(method="t.test")
ggviolin(Sheet4, "House_cn", "Correlation_cn", fill="House_cn", add = "jitter")+
stat_compare_means(method="t.test", label.sep = 1)
ggviolin(Sheet4, "House_cn", "Correlation_cn", fill="House_cn", add = "jitter")+
stat_compare_means(method="t.test", label.sep = "~`,`~")
if(!require('ggpubr')) {
install.packages('ggpubr')
library('ggpubr')
}
# Load data
data("mtcars")
df <- mtcars
df$cyl <- as.factor(df$cyl)
# Scatter plot with correlation coefficient
#:::::::::::::::::::::::::::::::::::::::::::::::::
sp <- ggscatter(df, x = "wt", y = "mpg",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
# Add correlation coefficient
sp + stat_cor(method = "pearson", label.x = 3, label.y = 30)
# Specify the number of decimal places of precision for p and r
# Using 3 decimal places for the p-value and
# 2 decimal places for the correlation coefficient (r)
sp + stat_cor(p.accuracy = 0.001, r.accuracy = 0.01)
# Show only the r.label but not the p.label
sp + stat_cor(aes(label = ..r.label..), label.x = 3)
# Use R2 instead of R
ggscatter(df, x = "wt", y = "mpg", add = "reg.line") +
stat_cor(
aes(label = paste(..rr.label.., ..p.label.., sep = "~`,`~")),
label.x = 3
)
# Color by groups and facet
#::::::::::::::::::::::::::::::::::::::::::::::::::::
sp <- ggscatter(df, x = "wt", y = "mpg",
color = "cyl", palette = "jco",
add = "reg.line", conf.int = TRUE)
sp + stat_cor(aes(color = cyl), label.x = 3)
Figure6 = ggscatter(Sheet4, x = "House_cn", y = "Correlation_cn",
add = "reg.line")
Figurre6
Figure6
Figure6 = ggscatter(Sheet4, x = "House_cn", y = "Correlation_cn", add = "reg.line",
add.params = list(color = "blue", fill = "lightgray"), conf.int = TRUE)
Figure6
sp <- ggscatter(df, x = "wt", y = "mpg",
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE # Add confidence interval
)
sp
Figure6
Figure6 = ggscatter(Sheet4, x = "House_cn", y = "Correlation_cn", add = "reg.line",
add.params = list(color = "blue", fill = "lightgray"), conf.int = TRUE)+
stat_cor(method = "pearson")
Figure6
Figure6 = ggscatter(Sheet4, x = "House_cn", y = "Correlation_cn", add = "reg.line",
add.params = list(color = "blue", fill = "lightgray"), conf.int = TRUE)+
stat_cor(method = "pearson")+stat_cor(p.accuracy = 0.025, r.accuracy = = 0.01)
Figure6 = ggscatter(Sheet4, x = "House_cn", y = "Correlation_cn", add = "reg.line",
add.params = list(color = "blue", fill = "lightgray"), conf.int = TRUE)+
stat_cor(method = "pearson")+stat_cor(p.accuracy = 0.025, r.accuracy = 0.01)
Figure6
Figure6 = ggscatter(Sheet4, x = "House_cn", y = "Correlation_cn", add = "reg.line",
add.params = list(color = "blue", fill = "lightgray"), conf.int = TRUE)+
stat_cor(method = "pearson",label.x = 3, label.y = 30)+
stat_cor(p.accuracy = 0.025, r.accuracy = 0.01)
Figure6
Figure6 = ggscatter(Sheet4, x = "House_cn", y = "Correlation_cn", add = "reg.line",
add.params = list(color = "blue", fill = "lightgray"), conf.int = TRUE)+
stat_cor(method = "pearson",label.x = 3, label.y = 30)+
stat_cor(p.accuracy = 0.025, r.accuracy = 0.01)+
stat_cor(aes(label = ..r.label..), label.x = 3)
Figure6
ggscatter(Sheet4, x = "House_cn", y = "Correlation_cn", add = "reg.line")+
stat_cor(aes(label=paste(..rr.label.., ..p.label.., sep = "~`,`~")), label.x=3))
ggscatter(Sheet4, x = "House_cn", y = "Correlation_cn", add = "reg.line")+
stat_cor(aes(label=paste(..rr.label.., ..p.label.., sep = "~`,`~")), label.x=3)
ggscatter(Sheet4, x = "House_cn", y = "Correlation_cn", color = "House_cn", palette = "jco",
conf.int = TRUE)+stat_cor(aes(color = House_cn), label.x =3)
ggscatter(Sheet1, x = "Income", y = "Price", color = "House", palette = "jco",
conf.int = TRUE)+stat_cor(aes(color = House), label.x =3)
ggscatter(Sheet1, x = "Income", y = "Price", color = "House", palette = "jco",
conf.int = TRUE)+stat_cor(aes(color = House), label.x =3)+
stat_cor(p.accuracy = 0.025, r.accuracy = 0.01)
ggscatter(Sheet1, x = "Income", y = "Price", color = "House", palette = "jco",
conf.int = TRUE)+stat_cor(aes(color = House), label.x =3)
Figure6 = ggscatter(Sheet1, x = "Income", y = "Price", color = "House", palette = "jco",
conf.int = TRUE)+stat_cor(aes(color = House), label.x =3)
Figure6
t.test(Income/Price, MercutarIncome/MercutarPrice, mu = 0.025)
Figure1
Figure6 = ggscatter(Sheet1, x = "Income", y = "Price", color = "House", palette = "jco",
conf.int = TRUE)+stat_cor(aes(color = House), label.x =3)
Figure6
Figure5
Figure5 =ggplot(Sheet3, aes(x = House_cncl, y = Correlation_cncl, fill= House_cncl))+
stat_summary(fun.y = mean, geom = "bar")+
ylim(0,.5)+labs(x="Houses", y="Average housing price",
title="Figure4")+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)+0.0125)+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)-0.0125)
Figure5
t.test(Income/Price, Sea_and_TreeIncome/Sea_and_TreePrice, mu = 0.025)
View(Sheet3)
Figure5
t.test(Income/Price, MercutarIncome/MercutarPrice, mu = 0.025)
t.test(Income/Price, Sea_and_TreeIncome/Sea_and_TreePrice, mu = 0.025)
t.test(Income/Price, Kripp_AltstadtIncome/Kripp_AltstadtPrice, mu = 0.025)
t.test(Income/Price, Kripp_NeustadtIncome/Kripp_NeustadtPrice, mu = 0.025)
t.test(Income/Price, NordlethalIncome/NordlethalPrice, mu = 0.025)
t.test(Income/Price, Sea_and_TreeIncome/Sea_and_TreePrice, mu = 0.025)
Figure5 =ggplot(Sheet3, aes(x = House_cncl, y = Correlation_cncl, fill= House_cncl))+
stat_summary(fun.y = mean, geom = "bar")+
ylim(0,.5)+labs(x="Houses", y="Average housing price",
title="Figure4")+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)+0.0282)+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)-0.0076)
Figure5
Figure5 =ggplot(Sheet3, aes(x = House_cncl, y = Correlation_cncl, fill= House_cncl))+
stat_summary(fun.y = mean, geom = "bar")+
ylim(0,.5)+labs(x="Houses", y="Average housing price",
title="Figure4")+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)-0.0282)+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)+0.0076)
Figure5
t.test(Income/Price, MercutarIncome/MercutarPrice, mu = 0.025)
t.test(Income/Price, Sea_and_TreeIncome/Sea_and_TreePrice, mu = 0.025)
t.test(Income/Price, Kripp_AltstadtIncome/Kripp_AltstadtPrice, mu = 0.025)
t.test(Income/Price, Kripp_NeustadtIncome/Kripp_NeustadtPrice, mu = 0.025)
t.test(Income/Price, NordlethalIncome/NordlethalPrice, mu = 0.025)
Figure5 =ggplot(Sheet3, aes(x = House_cncl, y = Correlation_cncl, fill= House_cncl))+
stat_summary(fun.y = mean, geom = "bar")+
ylim(0,.5)+labs(x="Houses", y="Average housing price",
title="Figure4")+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)-0.0125)+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)+0.0125)
Figure5
Figure5 =ggplot(Sheet3, aes(x = House_cncl, y = Correlation_cncl, fill= House_cncl))+
stat_summary(fun.y = mean, geom = "bar")+
ylim(.25,.35)+labs(x="Houses", y="Average housing price",
title="Figure4")+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)-0.0125)+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)+0.0125)
Figure5
Figure5 =ggplot(Sheet3, aes(x = House_cncl, y = Correlation_cncl, fill= House_cncl))+
stat_summary(fun.y = mean, geom = "bar")+
ylim(0,.5)+labs(x="Houses", y="Average housing price",
title="Figure4")+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)-0.0125)+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)+0.0125)
Figure5
Figure5 =ggplot(Sheet3, aes(x = House_cncl, y = Correlation_cncl, fill= House_cncl))+
stat_summary(fun.y = mean, geom = "bar")+
ylim(0.2,0.4)+labs(x="Houses", y="Average housing price",
title="Figure4")+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)-0.0125)+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)+0.0125)
Figure5
Figure5 =ggplot(Sheet3, aes(x = House_cncl, y = Correlation_cncl, fill= House_cncl))+
stat_summary(fun.y = mean, geom = "bar")+
ylim(0.1,0.4)+labs(x="Houses", y="Average housing price",
title="Figure4")+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)-0.0125)+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)+0.0125)
Figure5
Figure5 =ggplot(Sheet3, aes(x = House_cncl, y = Correlation_cncl, fill= House_cncl))+
stat_summary(fun.y = mean, geom = "bar")+
ylim(0.1,0.5)+labs(x="Houses", y="Average housing price",
title="Figure4")+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)-0.0125)+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)+0.0125)
Figure5
Figure5 =ggplot(Sheet3, aes(x = House_cncl, y = Correlation_cncl, fill= House_cncl))+
stat_summary(fun.y = mean, geom = "bar")+
ylim(0.0,0.5)+labs(x="Houses", y="Average housing price",
title="Figure4")+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)-0.0125)+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)+0.0125)
Figure5
t.test(Income/Price, MercutarIncome/MercutarPrice, mu = 0.025)
Figure5 =ggplot(Sheet3, aes(x = House_cncl, y = Correlation_cncl, fill= House_cncl))+
stat_summary(fun.y = mean, geom = "bar")+
ylim(0.0,0.5)+labs(x="Houses", y="Average housing price",
title="Figure4")+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)-0.016)+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)+0.016)
Figure5
Figure6
t.test(Income/Price, MercutarIncome/MercutarPrice, mu = 0.025)
t.test(Income/Price, Sea_and_TreeIncome/Sea_and_TreePrice, mu = 0.025)
t.test(Income/Price, Kripp_AltstadtIncome/Kripp_AltstadtPrice, mu = 0.025)
t.test(Income/Price, Kripp_NeustadtIncome/Kripp_NeustadtPrice, mu = 0.025)
t.test(Income/Price, NordlethalIncome/NordlethalPrice, mu = 0.025)
Correlation_cncl = c(mean(Income/Price)/mean(Income/Price), mean(MercutarIncome/MercutarPrice)/mean(Income/Price), mean(Sea_and_TreeIncome/Sea_and_TreePrice)/mean(Income/Price),
mean(Kripp_AltstadtIncome/Kripp_AltstadtPrice)/mean(Income/Price), mean(Kripp_NeustadtIncome/Kripp_NeustadtPrice)/mean(Income/Price),
mean(NordlethalIncome/NordlethalPrice)/mean(Income/Price))
Sheet3 = tibble(House_cncl, Correlation_cncl)
Figure5
Sheet3 = tibble(House_cncl, Correlation_cncl)
Figure5 =ggplot(Sheet3, aes(x = House_cncl, y = Correlation_cncl, fill= House_cncl))+
stat_summary(fun.y = mean, geom = "bar")+
ylim(0.0,0.5)+labs(x="Houses", y="Average housing price",
title="Figure4")+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)-0.016)+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)+0.016)
Figure5
Figure5 =ggplot(Sheet3, aes(x = House_cncl, y = Correlation_cncl, fill= House_cncl))+
stat_summary(fun.y = mean, geom = "bar")+labs(x="Houses", y="Average housing price",
title="Figure4")+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)-0.016)+
geom_hline(yintercept = mean(Sheet1$Income/Sheet1$Price)+0.016)
Figure5
Figure5 =ggplot(Sheet3, aes(x = House_cncl, y = Correlation_cncl, fill= House_cncl))+
stat_summary(fun.y = mean, geom = "bar")+labs(x="Houses", y="Average housing price",
title="Figure4")+
geom_hline(yintercept = 1-0.016)+
geom_hline(yintercept = 1+0.016)
Figure5
dff = data.frame(MercutarIncome/MercutarPrice,Income/Price)
ggviolin(dff,"MercutarIncome/MercutarPrice","Income/Price")
ggviolin(Sheet4,"House_cn","Correlation_cn",fill="House_cn")
ggviolin(Sheet4,"House_cn","Correlation_cn",fill="House_cn", add="jitter",conf.int = TRUE)+stat_cor(aes(color = House), label.x =3)
ggviolin(Sheet4,"House_cn","Correlation_cn",fill="House_cn", add="jitter",conf.int = TRUE)+stat_cor(aes(color = House_cn), label.x =3)
Figure6 = ggscatter(Sheet1, x = "Income", y = "Price", color = "House", palette = "jco",
conf.int = TRUE)+stat_compare_means(label.x = 1.5,method = "t.test")+
stat_cor(aes(color = House), label.x =3)
Figure6 = ggscatter(Sheet1, x = "Income", y = "Price", color = "House", palette = "jco",
conf.int = TRUE)+stat_compare_means(label.x = 1.5,method = "t.test")+
stat_cor(aes(color = House), label.x =3)
Figure6
Figure6
Figure6
Figure6 = ggscatter(Sheet1, x = "Income", y = "Price", color = "House", palette = "jco",
conf.int = TRUE)+stat_cor(aes(color = House), label.x =3)
Figure6
ggviolin(Sheet4,"House_cn","Correlation_cn",fill="House_cn", add="jitter")+stat_compare_means(label.x = 1.5,method="t.test")
ggviolin(Sheet4,"House_cn","Correlation_cn",fill="House_cn", add="jitter", palette = "jco")+stat_compare_means(label.x = 1.5,method="t.test")
ggviolin(Sheet4,"House_cn","Correlation_cn",fill="House_cn", add="jitter", palette = "jco")+stat_compare_means(label.sep = "~`,`~",method="t.test")
ggviolin(Sheet1,"Income/Price","MercutarIncome/MercutarPrice", add="jitter", palette = "jco")+stat_compare_means(label.sep = "~`,`~",method="t.test")
ggviolin(Sheet1,"MercutarIncome/MercutarPrice","Sea_and_TreeIncome/Sea_and_TreePrice", add="jitter", palette = "jco")+stat_compare_means(label.sep = "~`,`~",method="t.test")
ggviolin(Sheet4,"Correlation_cn","House_cn", fill = "House_cn", add="jitter",
palette = "jco")+stat_compare_means(label.sep = "~`,`~",method="t.test")
ggviolin(Sheet4,"House_cn","Correlation_cn", fill = "House_cn", add="jitter",
palette = "jco")+stat_compare_means(label.sep = "~`,`~",method="t.test")
Figure6 = ggscatter(Sheet1, x = "Income", y = "Price", color = "House", palette = "jco",
conf.int = TRUE)+stat_cor(aes(color = House), label.x =30)
Figure6 = ggscatter(Sheet1, x = "Income", y = "Price", color = "House", palette = "jco",
conf.int = TRUE)+stat_cor(aes(color = House), label.x =30)
ggviolin(Sheet4,"House_cn","Correlation_cn", fill = "House_cn", add="jitter",
palette = "jco")+stat_compare_means(label.sep = "~`,`~",method="t.test")+
stat_cor(label.x =3)
#rep("Kripp Neustadt", 50),rep("Nordlethal", 50))
Correlation_cn = c(Income/Price, MercutarIncome/MercutarPrice)#, Sea_and_TreeIncome/Sea_and_TreePrice,
#Kripp_AltstadtIncome/Kripp_AltstadtPrice, Kripp_NeustadtIncome/Kripp_NeustadtPrice,
#NordlethalIncome/NordlethalPrice)
Sheet4 = tibble(House_cn, Correlation_cn)
#rep("Kripp Neustadt", 50),rep("Nordlethal", 50))
Correlation_cn = c(Income/Price, MercutarIncome/MercutarPrice)#, Sea_and_TreeIncome/Sea_and_TreePrice,
#Kripp_AltstadtIncome/Kripp_AltstadtPrice, Kripp_NeustadtIncome/Kripp_NeustadtPrice,
#NordlethalIncome/NordlethalPrice)
Sheet4 = tibble(House_cn, Correlation_cn)
Correlation_cn = c(Income/Price, MercutarIncome/MercutarPrice, Sea_and_TreeIncome/Sea_and_TreePrice,
Kripp_AltstadtIncome/Kripp_AltstadtPrice, Kripp_NeustadtIncome/Kripp_NeustadtPrice,
NordlethalIncome/NordlethalPrice)
Sheet4 = tibble(House_cn, Correlation_cn)
House_cn = c(rep("General",250),rep("Mercutar", 50),rep("Sea and Tree", 50),rep("Kripp Altstadt", 50),
rep("Kripp Neustadt", 50),rep("Nordlethal", 50))
Correlation_cn = c(Income/Price, MercutarIncome/MercutarPrice, Sea_and_TreeIncome/Sea_and_TreePrice,
Kripp_AltstadtIncome/Kripp_AltstadtPrice, Kripp_NeustadtIncome/Kripp_NeustadtPrice,
NordlethalIncome/NordlethalPrice)
House_cn = c(rep("General",50),rep("Mercutar", 50),rep("Sea and Tree", 50),rep("Kripp Altstadt", 50),
rep("Kripp Neustadt", 50),rep("Nordlethal", 50))
Correlation_cn = c(Income/Price, MercutarIncome/MercutarPrice, Sea_and_TreeIncome/Sea_and_TreePrice,
Kripp_AltstadtIncome/Kripp_AltstadtPrice, Kripp_NeustadtIncome/Kripp_NeustadtPrice,
NordlethalIncome/NordlethalPrice)
Sheet4 = tibble(House_cn, Correlation_cn)
Sheet4 = data.frame(House_cn, Correlation_cn)
House_cn = c(rep("General",250),rep("Mercutar", 50),rep("Sea and Tree", 50),rep("Kripp Altstadt", 50),
rep("Kripp Neustadt", 50),rep("Nordlethal", 50))
Sheet4 = data.frame(House_cn, Correlation_cn)
Correlation_cn = c(Income/Price, MercutarIncome/MercutarPrice, Sea_and_TreeIncome/Sea_and_TreePrice,
Kripp_AltstadtIncome/Kripp_AltstadtPrice, Kripp_NeustadtIncome/Kripp_NeustadtPrice,
NordlethalIncome/NordlethalPrice)
Sheet4 = data.frame(House_cn, Correlation_cn)
ggviolin(Sheet4,"House_cn","Correlation_cn", fill = "House_cn", add="jitter",
palette = "jco")+stat_compare_means(label.sep = "~`,`~",method="t.test")
House_cn = c(rep("General",50),rep("Mercutar", 50),rep("Sea and Tree", 50),rep("Kripp Altstadt", 50),
rep("Kripp Neustadt", 50),rep("Nordlethal", 50))
Sheet4 = data.frame(House_cn, Correlation_cn)
House_cn = c(rep("General",250),rep("Mercutar", 50),rep("Sea and Tree", 50),rep("Kripp Altstadt", 50),
rep("Kripp Neustadt", 50),rep("Nordlethal", 50))
ggviolin(Sheet4,"House_cn","Correlation_cn", fill = "House_cn", add="jitter",
palette = "jco")+stat_compare_means(label.sep = "~`,`~",method="t.test")
Figure5
ggviolin(Sheet4,"House_cn","Correlation_cn", fill = "House_cn",
palette = "jco")+stat_compare_means(label.sep = "~`,`~",method="t.test")
Figure5
Figure6
Figure1
#-------------------------------------------------------------------------------
#Chapter 2.0 DATA VISUALIZATION
#visualize raw data "Figure1"
Figure1 = ggplot(Sheet1, aes(x = Income, y = Price, color = House))+geom_point()+
labs( x = "Average income per house (kEUR)", y = "Average house price (kEUR)",
title = "Figure 1")+
geom_smooth(method = "lm", se = FALSE)+geom_vline(xintercept = mean(Sheet1$Income))+
geom_hline(yintercept = mean(Sheet1$Price))
Figure1
#-------------------------------------------------------------------------------
#Chapter 2.2 "Figure 2"
#visualize general interpreted data
Figure2 =ggplot(Sheet2, aes(x = Income_mean, y = Price_mean, color = House_mean))+geom_point()+
labs( x = "Average income per house (kEUR)", y = "Average house price (kEUR)",
title = "Figure 2")+
geom_vline(xintercept = mean(Sheet1$Income))+
geom_hline(yintercept = mean(Sheet1$Price))
Figure2
#-------------------------------------------------------------------------------
#Chapter 2.0 DATA VISUALIZATION
#visualize raw data "Figure1"
Figure1 = ggplot(Sheet1, aes(x = Income, y = Price, color = House))+geom_point()+
labs( x = "Income per house (kEUR)", y = "House price (kEUR)",
title = "Figure 1")+
geom_smooth(method = "lm", se = FALSE)+geom_vline(xintercept = mean(Sheet1$Income))+
geom_hline(yintercept = mean(Sheet1$Price))
Figure1
#-------------------------------------------------------------------------------
#Chapter 2.3 "Figure 3"
#visualize interpreted data specifically focus on income comparison
Figure3 =ggplot(Sheet2, aes(x = House_mean, y = Income_mean, fill= House_mean))+
stat_summary(fun.y = mean, geom = "bar")+
ylim(0,250)+labs(x="Houses", y="Average income",
title="Figure3")+
geom_hline(yintercept = mean(Sheet1$Income))
Figure3
#-------------------------------------------------------------------------------
#Chapter 2.3 "Figure 3"
#visualize interpreted data specifically focus on income comparison
Figure3 =ggplot(Sheet2, aes(x = House_mean, y = Income_mean, fill= House_mean))+
stat_summary(fun.y = mean, geom = "bar")+
ylim(0,250)+labs(x="Houses", y="Average income (kEUR)",
title="Figure3")+
geom_hline(yintercept = mean(Sheet1$Income))
Figure3
#-------------------------------------------------------------------------------
#Chapter 2.0 DATA VISUALIZATION
#visualize raw data "Figure1"
Figure1 = ggplot(Sheet1, aes(x = Income, y = Price, color = House))+geom_point()+
labs( x = "Income per house (kEUR)", y = "House price (kEUR)",
title = "Figure 1: general data visualization")+
geom_smooth(method = "lm", se = FALSE)+geom_vline(xintercept = mean(Sheet1$Income))+
geom_hline(yintercept = mean(Sheet1$Price))
Figure1
#-------------------------------------------------------------------------------
#Chapter 2.2 "Figure 2"
#visualize general interpreted data
Figure2 =ggplot(Sheet2, aes(x = Income_mean, y = Price_mean, color = House_mean))+geom_point()+
labs( x = "Average income per house (kEUR)", y = "Average house price (kEUR)",
title = "Figure 2: house average")+
geom_vline(xintercept = mean(Sheet1$Income))+
geom_hline(yintercept = mean(Sheet1$Price))
Figure2
#-------------------------------------------------------------------------------
#Chapter 2.3 "Figure 3"
#visualize interpreted data specifically focus on income comparison
Figure3 =ggplot(Sheet2, aes(x = House_mean, y = Income_mean, fill= House_mean))+
stat_summary(fun.y = mean, geom = "bar")+
ylim(0,250)+labs(x="Houses", y="Average income (kEUR)",
title="Figure3")+
geom_hline(yintercept = mean(Sheet1$Income))
Figure3
#-------------------------------------------------------------------------------
#Chapter 2.3 "Figure 3"
#visualize interpreted data specifically focus on income comparison
Figure3 =ggplot(Sheet2, aes(x = House_mean, y = Income_mean, fill= House_mean))+
stat_summary(fun.y = mean, geom = "bar")+
ylim(0,250)+labs(x="Houses", y="Average income (kEUR)",
title="Figure3: average income comparison")+
geom_hline(yintercept = mean(Sheet1$Income))
Figure3
#-------------------------------------------------------------------------------
#Chapter 2.4 "Figure 4"
#visualize interpreted data specifically focus on housing price comparison
Figure4 =ggplot(Sheet2, aes(x = House_mean, y = Price_mean, fill= House_mean))+
stat_summary(fun.y = mean, geom = "bar")+
ylim(0,850)+labs(x="Houses", y="Average housing price",
title="Figure4")+
geom_hline(yintercept = mean(Sheet1$Price))
Figure4
#-------------------------------------------------------------------------------
#Chapter 2.4 "Figure 4"
#visualize interpreted data specifically focus on housing price comparison
Figure4 =ggplot(Sheet2, aes(x = House_mean, y = Price_mean, fill= House_mean))+
stat_summary(fun.y = mean, geom = "bar")+
ylim(0,850)+labs(x="Houses", y="Average housing price",
title="Figure4: average housing price comparison")+
geom_hline(yintercept = mean(Sheet1$Price))
Figure4
Figure5 =ggplot(Sheet3, aes(x = House_cncl, y = Correlation_cncl, fill= House_cncl))+
stat_summary(fun.y = mean, geom = "bar")+labs(x="Houses", y="Average housing price",
title="Figure5")
Figure5
Figure5 =ggplot(Sheet3, aes(x = House_cncl, y = Correlation_cncl, fill= House_cncl))+
stat_summary(fun.y = mean, geom = "bar")+labs(x="Houses", y="Income per price compare to general mean",
title="Figure5: trend comparison")
Figure5
Figure5 =ggplot(Sheet3, aes(x = House_cncl, y = Correlation_cncl, fill= House_cncl))+
stat_summary(fun.y = mean, geom = "bar")+labs(x="Houses", y="Income per price compare to general mean",
title="Figure5: trend comparison")
Figure5
Figure1
Figure6
Figure6 =ggviolin(Sheet4,"House_cn","Correlation_cn", fill = "House_cn",
palette = "jco")+stat_compare_means(label.sep = "~`,`~",method="t.test")+
labs(x="Houses", y="Income per price compare to general mean",title="Figure6: trend comparison")
Figure6
Figure6 =ggboxplot(Sheet4,"House_cn","Correlation_cn", fill = "House_cn", add="jitter",
palette = "jco")+stat_compare_means(label.sep = "~`,`~",method="t.test")+
labs(x="Houses", y="Income per price compare to general mean",title="Figure6: correlation test")
Figure6
Figure6 =ggboxplot(Sheet4,"House_cn","Correlation_cn", fill = "House_cn", add="jitter",
palette = "jco")+stat_compare_means(label.sep = "~`,`~")+
labs(x="Houses", y="Income per price compare to general mean",title="Figure6: correlation test")
Figure6
Figure6 =ggboxplot(Sheet4,"House_cn","Correlation_cn", fill = "House_cn", add="jitter",
palette = "jco")+stat_compare_means(label.x = 2.5)+
labs(x="Houses", y="Income per price compare to general mean",title="Figure6: correlation test")
Figure6
Figure6 =ggboxplot(Sheet4,"House_cn","Correlation_cn", fill = "House_cn", add="jitter",
palette = "jco")+stat_compare_means(label.x = 3.5)+
labs(x="Houses", y="Income per price compare to general mean",title="Figure6: correlation test")
Figure6
Figure6 =ggboxplot(Sheet4,"House_cn","Correlation_cn", fill = "House_cn", add="jitter",
palette = "jco")+stat_compare_means(label.x = 3)+
labs(x="Houses", y="Income per price compare to general mean",title="Figure6: correlation test")
Figure6
Figure6 =ggviolin(Sheet4,"House_cn","Correlation_cn", fill = "House_cn", add="jitter",
palette = "jco")+stat_compare_means(label.x = 3)+
labs(x="Houses", y="Income per price compare to general mean",title="Figure6: correlation test")
Figure6
Figure6 =ggboxplot(Sheet4,"House_cn","Correlation_cn", fill = "House_cn", add="jitter",
palette = "jco")+stat_compare_means(label.x = 3)+
labs(x="Houses", y="Income per price compare to general mean",title="Figure6: correlation test")
Figure6
Figure7 = ggscatter(Sheet1, x = "Income", y = "Price", color = "House", palette = "jco",
conf.int = TRUE)+stat_cor(aes(color = House), label.x =3)
Figure7
Figure7 = ggscatter(Sheet1, x = "Income", y = "Price", color = "House", palette = "jco",
conf.int = TRUE)+stat_cor(aes(color = House), label.x =3)+
labs( x = "Income per house (kEUR)", y = "House price (kEUR)",
title = "Figure 7: general data visualization V2")
Figure7
t.test(Income/Price, MercutarIncome/MercutarPrice, mu = 0.025)
t.test(Income/Price, Sea_and_TreeIncome/Sea_and_TreePrice, mu = 0.025)
t.test(Income/Price, Kripp_AltstadtIncome/Kripp_AltstadtPrice, mu = 0.025)
t.test(Income/Price, Kripp_NeustadtIncome/Kripp_NeustadtPrice, mu = 0.025)
t.test(Income/Price, NordlethalIncome/NordlethalPrice, mu = 0.025)
t.test(MercutarIncome,MercutarPrice, mu = 0.025)
t.test(Income/Price, Sea_and_TreeIncome/Sea_and_TreePrice)
t.test(Sea_and_TreeIncome,Sea_and_TreePrice)
t.test(Sea_and_TreeIncome,Sea_and_TreePrice, mu = 0.025)
t.test(MercutarIncome,MercutarPrice, mu = 0.025)
t.test(MercutarIncome,MercutarPrice, mu = 0.025)
t.test(MercutarIncome,MercutarPrice)
#-------------------------------------------------------------------------------
#Chapter 2.2 "Figure 2"
#visualize general interpreted data
Figure2 =ggplot(Sheet2, aes(x = Income_mean, y = Price_mean, color = House_mean))+geom_point()+
labs( x = "Average income per house (kEUR)", y = "Average house price (kEUR)",
title = "Figure 2: house average")+
geom_vline(xintercept = mean(Sheet1$Income))+
geom_hline(yintercept = mean(Sheet1$Price))
Figure2
Figure3
Figure4
